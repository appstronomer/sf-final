version: '3.8'

services:

  mock-rss-backend:
        image: golang:1.21.4-alpine3.18
        expose:
          - 80
        volumes:
          - ./mock-rss-backend/source:/app/source
          - ./mock-rss-backend/config.dev/www:/app/config/www
          - ./mock-rss-backend/volume.dev/cache:/root/.cache
        healthcheck:
          test: wget --no-verbose --tries=1 --spider http://localhost:80/healthcheck.txt || exit 1
          interval: 5s
          timeout: 10s
          retries: 5
        working_dir: /app/source
        command: go run main.go /app/config/www

  news-db:
    image: postgres:16.2-alpine3.19
    expose:
      - 5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sf
    volumes:
      - ./news-db/source:/docker-entrypoint-initdb.d:ro
      - ./news-db/volume.dev/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user", "-d", "sf"]
      interval: 5s
      timeout: 10s
      retries: 5

  news-backend:
    image: golang:1.21.4-alpine3.18
    environment:
      - GOPATH=/app/volume/go
    volumes:
      - ./news-backend/source:/app/source
      - ./news-backend/config.dev:/app/config:ro
      - ./news-backend/volume.dev/gohome:/app/volume/go
      - ./news-backend/volume.dev/cache:/root/.cache
    expose:
      - 80
    depends_on:
          news-db:
            condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    working_dir: /app/source
    command: go run cmd/news.go /app/config/config.json postgres://user:password@news-db:5432/sf

  comments-db:
    image: postgres:16.2-alpine3.19
    expose:
      - 5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sf
    volumes:
      - ./comments-db/source:/docker-entrypoint-initdb.d:ro
      - ./comments-db/volume.dev/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "user", "-d", "sf"]
      interval: 5s
      timeout: 10s
      retries: 5

  comments-backend:
    image: golang:1.21.4-alpine3.18
    environment:
      - GOPATH=/app/volume/go
    volumes:
      - ./comments-backend/source:/app/source
      - ./comments-backend/volume.dev/gohome:/app/volume/go
      - ./comments-backend/volume.dev/cache:/root/.cache
    expose:
      - 80
    depends_on:
          comments-db:
            condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    working_dir: /app/source
    command: go run cmd/comments.go postgres://user:password@comments-db:5432/sf

  check-backend:
    image: golang:1.21.4-alpine3.18
    environment:
      - GOPATH=/app/volume/go
    volumes:
      - ./check-backend/source:/app/source
      - ./check-backend/volume.dev/gohome:/app/volume/go
      - ./check-backend/volume.dev/cache:/root/.cache
    ports:
      - 8080:80
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    working_dir: /app/source
    command: go run cmd/check.go 